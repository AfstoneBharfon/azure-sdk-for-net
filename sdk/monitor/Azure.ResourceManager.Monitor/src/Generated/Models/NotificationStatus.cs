// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.ResourceManager.Monitor.Models
{
    /// <summary>
    /// The details of the test notification results.
    /// Serialized Name: TestNotificationDetailsResponse
    /// </summary>
    public partial class NotificationStatus
    {
        /// <summary> Initializes a new instance of NotificationStatus. </summary>
        /// <param name="state">
        /// The overall state
        /// Serialized Name: TestNotificationDetailsResponse.state
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="state"/> is null. </exception>
        internal NotificationStatus(string state)
        {
            Argument.AssertNotNull(state, nameof(state));

            State = state;
            ActionDetails = new ChangeTrackingList<NotificationActionDetail>();
        }

        /// <summary> Initializes a new instance of NotificationStatus. </summary>
        /// <param name="context">
        /// The context info
        /// Serialized Name: TestNotificationDetailsResponse.context
        /// </param>
        /// <param name="state">
        /// The overall state
        /// Serialized Name: TestNotificationDetailsResponse.state
        /// </param>
        /// <param name="completedOn">
        /// The completed time
        /// Serialized Name: TestNotificationDetailsResponse.completedTime
        /// </param>
        /// <param name="createdOn">
        /// The created time
        /// Serialized Name: TestNotificationDetailsResponse.createdTime
        /// </param>
        /// <param name="actionDetails">
        /// The list of action detail
        /// Serialized Name: TestNotificationDetailsResponse.actionDetails
        /// </param>
        internal NotificationStatus(NotificationContext context, string state, DateTimeOffset? completedOn, DateTimeOffset? createdOn, IReadOnlyList<NotificationActionDetail> actionDetails)
        {
            Context = context;
            State = state;
            CompletedOn = completedOn;
            CreatedOn = createdOn;
            ActionDetails = actionDetails;
        }

        /// <summary>
        /// The context info
        /// Serialized Name: TestNotificationDetailsResponse.context
        /// </summary>
        public NotificationContext Context { get; }
        /// <summary>
        /// The overall state
        /// Serialized Name: TestNotificationDetailsResponse.state
        /// </summary>
        public string State { get; }
        /// <summary>
        /// The completed time
        /// Serialized Name: TestNotificationDetailsResponse.completedTime
        /// </summary>
        public DateTimeOffset? CompletedOn { get; }
        /// <summary>
        /// The created time
        /// Serialized Name: TestNotificationDetailsResponse.createdTime
        /// </summary>
        public DateTimeOffset? CreatedOn { get; }
        /// <summary>
        /// The list of action detail
        /// Serialized Name: TestNotificationDetailsResponse.actionDetails
        /// </summary>
        public IReadOnlyList<NotificationActionDetail> ActionDetails { get; }
    }
}
